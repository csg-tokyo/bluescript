from sample_data import DATA

TAG = "fft"
WARMUP = 1
CYCLE = 3

DATA_LEN = 1024

FFT_TABLE = [ 32767, 0, 0, 32767, 23169, 23169, -23169, 23169, 30272, 12539, -12539, 30272, 12539, 30272, -30272, 12539, 32137, 6392, -6392, 32137, 18204, 27244, -27244, 18204, 27244, 18204, -18204, 27244, 6392, 32137, -32137, 6392, 32609, 3211, -3211, 32609, 20787, 25329, -25329, 20787, 28897, 15446, -15446, 28897, 9511, 31356, -31356, 9511, 31356, 9511, -9511, 31356, 15446, 28897, -28897, 15446, 25329, 20787, -20787, 25329, 3211, 32609, -32609, 3211, 32727, 1607, -1607, 32727, 22004, 24278, -24278, 22004, 29621, 14009, -14009, 29621, 11038, 30851, -30851, 11038, 31785, 7961, -7961, 31785, 16845, 28105, -28105, 16845, 26318, 19519, -19519, 26318, 4807, 32412, -32412, 4807, 32412, 4807, -4807, 32412, 19519, 26318, -26318, 19519, 28105, 16845, -16845, 28105, 7961, 31785, -31785, 7961, 30851, 11038, -11038, 30851, 14009, 29621, -29621, 14009, 24278, 22004, -22004, 24278, 1607, 32727, -32727, 1607, 32757, 804, -804, 32757, 22594, 23731, -23731, 22594, 29955, 13278, -13278, 29955, 11792, 30571, -30571, 11792, 31970, 7179, -7179, 31970, 17530, 27683, -27683, 17530, 26789, 18867, -18867, 26789, 5601, 32284, -32284, 5601, 32520, 4011, -4011, 32520, 20159, 25831, -25831, 20159, 28510, 16150, -16150, 28510, 8739, 31580, -31580, 8739, 31113, 10278, -10278, 31113, 14732, 29268, -29268, 14732, 24811, 21402, -21402, 24811, 2410, 32678, -32678, 2410, 32678, 2410, -2410, 32678, 21402, 24811, -24811, 21402, 29268, 14732, -14732, 29268, 10278, 31113, -31113, 10278, 31580, 8739, -8739, 31580, 16150, 28510, -28510, 16150, 25831, 20159, -20159, 25831, 4011, 32520, -32520, 4011, 32284, 5601, -5601, 32284, 18867, 26789, -26789, 18867, 27683, 17530, -17530, 27683, 7179, 31970, -31970, 7179, 30571, 11792, -11792, 30571, 13278, 29955, -29955, 13278, 23731, 22594, -22594, 23731, 804, 32757, -32757, 804, 32764, 402, -402, 32764, 22883, 23452, -23452, 22883, 30116, 12909, -12909, 30116, 12166, 30424, -30424, 12166, 32056, 6786, -6786, 32056, 17868, 27466, -27466, 17868, 27019, 18537, -18537, 27019, 5997, 32213, -32213, 5997, 32567, 3611, -3611, 32567, 20474, 25582, -25582, 20474, 28706, 15799, -15799, 28706, 9126, 31470, -31470, 9126, 31236, 9895, -9895, 31236, 15090, 29085, -29085, 15090, 25072, 21096, -21096, 25072, 2811, 32646, -32646, 2811, 32705, 2009, -2009, 32705, 21705, 24546, -24546, 21705, 29446, 14372, -14372, 29446, 10659, 30984, -30984, 10659, 31684, 8351, -8351, 31684, 16499, 28309, -28309, 16499, 26077, 19840, -19840, 26077, 4409, 32468, -32468, 4409, 32350, 5205, -5205, 32350, 19194, 26556, -26556, 19194, 27896, 17189, -17189, 27896, 7571, 31880, -31880, 7571, 30713, 11416, -11416, 30713, 13645, 29790, -29790, 13645, 24006, 22301, -22301, 24006, 1206, 32744, -32744, 1206, 32744, 1206, -1206, 32744, 22301, 24006, -24006, 22301, 29790, 13645, -13645, 29790, 11416, 30713, -30713, 11416, 31880, 7571, -7571, 31880, 17189, 27896, -27896, 17189, 26556, 19194, -19194, 26556, 5205, 32350, -32350, 5205, 32468, 4409, -4409, 32468, 19840, 26077, -26077, 19840, 28309, 16499, -16499, 28309, 8351, 31684, -31684, 8351, 30984, 10659, -10659, 30984, 14372, 29446, -29446, 14372, 24546, 21705, -21705, 24546, 2009, 32705, -32705, 2009, 32646, 2811, -2811, 32646, 21096, 25072, -25072, 21096, 29085, 15090, -15090, 29085, 9895, 31236, -31236, 9895, 31470, 9126, -9126, 31470, 15799, 28706, -28706, 15799, 25582, 20474, -20474, 25582, 3611, 32567, -32567, 3611, 32213, 5997, -5997, 32213, 18537, 27019, -27019, 18537, 27466, 17868, -17868, 27466, 6786, 32056, -32056, 6786, 30424, 12166, -12166, 30424, 12909, 30116, -30116, 12909, 23452, 22883, -22883, 23452, 402, 32764, -32764, 402, 32766, 201, -201, 32766, 23027, 23311, -23311, 23027, 30195, 12724, -12724, 30195, 12353, 30349, -30349, 12353, 32097, 6589, -6589, 32097, 18036, 27355, -27355, 18036, 27132, 18371, -18371, 27132, 6195, 32176, -32176, 6195, 32588, 3411, -3411, 32588, 20631, 25456, -25456, 20631, 28802, 15623, -15623, 28802, 9319, 31413, -31413, 9319, 31297, 9703, -9703, 31297, 15268, 28992, -28992, 15268, 25201, 20942, -20942, 25201, 3011, 32628, -32628, 3011, 32717, 1808, -1808, 32717, 21855, 24413, -24413, 21855, 29534, 14191, -14191, 29534, 10849, 30918, -30918, 10849, 31735, 8156, -8156, 31735, 16672, 28208, -28208, 16672, 26198, 19680, -19680, 26198, 4608, 32441, -32441, 4608, 32382, 5006, -5006, 32382, 19357, 26437, -26437, 19357, 28001, 17017, -17017, 28001, 7766, 31833, -31833, 7766, 30783, 11227, -11227, 30783, 13827, 29706, -29706, 13827, 24143, 22153, -22153, 24143, 1406, 32736, -32736, 1406, 32751, 1005, -1005, 32751, 22448, 23869, -23869, 22448, 29873, 13462, -13462, 29873, 11604, 30643, -30643, 11604, 31926, 7375, -7375, 31926, 17360, 27790, -27790, 17360, 26673, 19031, -19031, 26673, 5403, 32318, -32318, 5403, 32495, 4210, -4210, 32495, 20000, 25954, -25954, 20000, 28410, 16325, -16325, 28410, 8545, 31633, -31633, 8545, 31049, 10469, -10469, 31049, 14552, 29358, -29358, 14552, 24679, 21554, -21554, 24679, 2209, 32692, -32692, 2209, 32662, 2610, -2610, 32662, 21249, 24942, -24942, 21249, 29177, 14911, -14911, 29177, 10087, 31175, -31175, 10087, 31525, 8932, -8932, 31525, 15975, 28608, -28608, 15975, 25707, 20317, -20317, 25707, 3811, 32544, -32544, 3811, 32249, 5799, -5799, 32249, 18702, 26905, -26905, 18702, 27575, 17699, -17699, 27575, 6982, 32014, -32014, 6982, 30498, 11980, -11980, 30498, 13094, 30036, -30036, 13094, 23592, 22739, -22739, 23592, 603, 32761, -32761, 603, 32761, 603, -603, 32761, 22739, 23592, -23592, 22739, 30036, 13094, -13094, 30036, 11980, 30498, -30498, 11980, 32014, 6982, -6982, 32014, 17699, 27575, -27575, 17699, 26905, 18702, -18702, 26905, 5799, 32249, -32249, 5799, 32544, 3811, -3811, 32544, 20317, 25707, -25707, 20317, 28608, 15975, -15975, 28608, 8932, 31525, -31525, 8932, 31175, 10087, -10087, 31175, 14911, 29177, -29177, 14911, 24942, 21249, -21249, 24942, 2610, 32662, -32662, 2610, 32692, 2209, -2209, 32692, 21554, 24679, -24679, 21554, 29358, 14552, -14552, 29358, 10469, 31049, -31049, 10469, 31633, 8545, -8545, 31633, 16325, 28410, -28410, 16325, 25954, 20000, -20000, 25954, 4210, 32495, -32495, 4210, 32318, 5403, -5403, 32318, 19031, 26673, -26673, 19031, 27790, 17360, -17360, 27790, 7375, 31926, -31926, 7375, 30643, 11604, -11604, 30643, 13462, 29873, -29873, 13462, 23869, 22448, -22448, 23869, 1005, 32751, -32751, 1005, 32736, 1406, -1406, 32736, 22153, 24143, -24143, 22153, 29706, 13827, -13827, 29706, 11227, 30783, -30783, 11227, 31833, 7766, -7766, 31833, 17017, 28001, -28001, 17017, 26437, 19357, -19357, 26437, 5006, 32382, -32382, 5006, 32441, 4608, -4608, 32441, 19680, 26198, -26198, 19680, 28208, 16672, -16672, 28208, 8156, 31735, -31735, 8156, 30918, 10849, -10849, 30918, 14191, 29534, -29534, 14191, 24413, 21855, -21855, 24413, 1808, 32717, -32717, 1808, 32628, 3011, -3011, 32628, 20942, 25201, -25201, 20942, 28992, 15268, -15268, 28992, 9703, 31297, -31297, 9703, 31413, 9319, -9319, 31413, 15623, 28802, -28802, 15623, 25456, 20631, -20631, 25456, 3411, 32588, -32588, 3411, 32176, 6195, -6195, 32176, 18371, 27132, -27132, 18371, 27355, 18036, -18036, 27355, 6589, 32097, -32097, 6589, 30349, 12353, -12353, 30349, 12724, 30195, -30195, 12724, 23311, 23027, -23027, 23311, 201, 32766, -32766, 201]

ANSWER = [121, 126, 3, -7, 2, -4, 1, -10, 5, -4, -2, -4, 2, 2, 0, 3, -1, 0, 3, -7, -1, -7, -2, -2, 3, 1, -3, 3, -2, 0, -3, -3, -3, 2, 6, 6, 0, 0, -3, 2, 1, 1, 0, 0, -8, 3, -1, 3, 3, 3, 3, -1, -4, -1, -2, 4, -2, -5, -2, -1, 2, -2, -5, -1, 5, -2, -5, 1, 6, -3, 5, -1, 2, -1, 3, 1, 3, 8, 1, 5, -2, 0, -2, 1, -7, -1, 1, 1, 0, -1, 0, 6, 3, 3, -4, -3, -2, -3, -6, -3, 4, -5, -4, 1, 1, -5, 4, 1, 0, 0, 4, 1, 2, 0, 4, -3, 2, 0, -3, -3, 0, 5, 4, -1, -1, 5, 0, 2, -3, 1, -4, -1, 3, 0, 2, 1, 1, 1, -1, 5, 2, 1, -5, -2, -2, 2, 2, -4, -2, -1, -5, -8, -6, 5, 1, -3, -5, 1, -1, -1, -3, 3, 3, 3, 1, -1, 0, -5, -5, 4, 5, -3, 0, -1, -1, -3, -6, 3, -4, 2, 1, -3, 3, 0, -2, -2, -4, 2, -4, -1, -2, 0, 4, 0, -2, -3, 0, 2, 0, -1, -2, -2, 5, 4, 0, -6, -1, 2, -2, 3, 0, -3, -3, 2, 4, -1, -1, 2, -9, 1, -1, -5, 4, 5, 1, -2, -4, -2, -2, 7, -2, -1, -4, -8, -1, 3, -2, 3, -1, -6, -1, 1, -4, -1, 1, -1, 5, -5, 0, -3, 3, -3, -1, 3, -1, -4, 5, 1, -6, -4, -4, 2, 0, -4, 4, 3, 2, 4, -2, -7, -6, -2, 1, 4, 3, 3, -1, 3, -9, -2, -1, -3, -4, 4, -3, 1, 4, -4, -1, -3, 4, -6, -3, 5, 1, 0, -2, 0, -3, 1, -2, 1, 1, 3, -3, -4, -5, 2, 2, 5, -2, -1, -4, -1, 8, -3, -9, -6, 1, 4, -4, 0, -2, 0, 2, -1, 6, -5, -9, -3, -2, 1, -3, -6, -1, -3, 3, 2, -1, 2, -5, 2, -3, 2, -5, 1, 0, -2, 1, 0, -1, 0, -2, 3, -4, 3, 1, -1, -8, -3, -7, -1, -3, 0, -5, -1, 2, -6, 2, 3, 1, 8, 5, -3, 0, -4, -3, -2, 2, -1, -5, 2, -6, 1, -4, 2, -5, 4, 1, -1, -2, -3, -4, -4, -3, 0, -1, 0, -4, -5, 2, -1, 2, 5, -5, -2, -1, -1, 3, -1, -2, 2, -5, -5, -4, 0, 2, 4, -4, 1, -2, 6, -1, 0, -3, 0, -2, -3, -1, -1, 0, -2, -1, -3, 0, 2, 1, -2, -7, 1, -2, -7, 0, -2, -7, -2, 7, -6, 1, 5, 0, 2, 1, -4, 2, -1, 7, 3, 2, -4, -1, -1, -4, -1, 1, -3, 1, -5, -1, -8, 3, 0, 0, -5, 5, -2, 1, 1, 3, 3, 5, -2, 6, -2, -1, -5, 2, 3, 2, 0, -5, -1, -5, -4, -5, -1, -2, 0, 1, -6, 5, 0, 2, -6, 4, -2, 0, -5, 1, 4, 0, -2, 0, 3, 0, -3, 0, 1, 0, 0, 1, -2, 1, 2, -1, 0, -1, 2, 0, 3, -7, 3, 6, -3, -2, -1, -2, -3, 2, 3, -1, -3, -1, 2, 2, -1, -2, 3, -1, 1, -2, -1, -1, -5, 0, 2, 1, 0, 1, -2, 1, 10, -1, 1, -5, -4, 1, -2, 0, -3, -11, -2, -6, 0, -1, 3, 6, 2, 4, -2, -4, 5, -2, -6, -3, 0, 1, 1, 3, 3, -1, 1, 1, 2, -8, -1, -1, 4, 2, -4, 1, -2, -2, -1, 2, -6, 4, -1, 1, -2, -3, -3, 0, -1, -4, -2, 5, 4, -3, 0, -3, -6, 1, 2, 3, 1, -4, -3, 3, -5, 3, -1, 3, 1, -1, 2, -4, 2, 4, 4, 1, -2, -5, 2, 1, 1, 3, -1, 2, -2, -2, 1, -2, 4, -2, 4, 1, -2, -2, -1, -3, -4, 4, 0, 3, -1, 5, -3, 5, -4, 0, 1, 1, -7, -1, -2, -3, -5, 1, 5, -3, -2, 2, 8, -3, -4, 1, -2, 3, 1, -7, -2, -4, 1, 5, -7, 6, 3, -2, -2, -2, 1, 3, -4, 0, -3, -1, -2, 1, 5, -8, -3, -1, -1, 1, -1, -2, -3, 6, 6, 1, -2, 0, 1, 3, 5, 5, -2, 7, 0, -1, 4, 0, -5, 3, -1, -1, 0, -3, -3, 0, -5, -1, -5, -3, 6, 3, -3, -1, -4, -5, -3, 3, 1, 0, -7, -2, -4, 1, -5, 3, -8, -1, -3, 5, 0, 2, 5, 2, -3, -1, 1, 1, -2, -2, 1, 2, 2, -6, 2, 0, -1, 0, -1, 0, 2, 3, 0, -3, 1, -3, -6, -3, -6, -1, -2, 4, 0, 1, 3, 1, -6, 7, 0, 3, 2, -2, -7, -5, -1, 2, -1, 2, 2, 2, 2, 3, 3, -2, 0, -5, 1, 3, 4, -3, -3, 2, 1, -6, 2, -4, -2, 1, 4, -7, 4, 0, 0, 0, 1, 1, -3, -1, -4, -1, -2, 1, -4, 3, -3, -1, -7, 0, -1, -1, 4, -3, -4, 2, -1, 0, -2, -1, -5, -3, 0, 3, -3, 2, -4, -1, -1, 0, -5, 0, 4, 3, -5, -4, -6, 4, 2, -2, 6, -1, -3, -5, -3, 1, 1, 2, 1, 3, -3, 1, -7, 2, 3, 6, -2, -4, 1, 5, -2, -3, -3, -8, -6, -5, 0, -4, 1, -9, 3, -3, 0, -5, -1, -5, 4, -2, -4, 2, 3, 4, -4, 2, 0, 6, -2, 5, -1, 2, -1, -3, -1, -3, 3, 2, -7, -1, 1, 2, -10, -2, -2, -2, -5, 1, -3, -2, -3, -5, 1, -3, -6, 1, -1, 1, -2, -6, 3, -2, 0, -1, -1, 2, 2, -2, -1, -2, -7, 2, 3, -4, -5, -2, -5, -7, 5, 1, -1, -6, 2, 0, -5, 0, 1, -4, 0, -3, 1, -1, 0, 0, -2, 1, 1, -1, -5, -3, -2, -2, -6, -1, -5, 1, 0, 0, -1, -2, 2, 6, -4, -2, -7, 6, 0, -2, 0, -1, 3, 0, -1]
ADD_ROUNT_MULT = 0x7fff
MULT_SHIFT = 0x7fff

class SC16:
    re = 0
    im = 0



def fft(data):
    cs = SC16()
    m_data = SC16()
    a_data = SC16()

    ie = 1
    N2 = int(len(data)/4)
    
    while(N2 > 0):
        ia = 0
        j = 0
        while j < ie :
            cs.re = FFT_TABLE[2*j]
            cs.im = FFT_TABLE[2*j+1]

            for _ in range(0,N2):
                m = ia + N2

                m_data.re = data[2*m]
                m_data.im = data[2*m+1]     

                a_data.re = data[2*ia]
                a_data.im = data[2*ia+1]

                m1 = SC16()
                result = a_data.re*MULT_SHIFT 
                result -= cs.re*m_data.re + cs.im*m_data.im
                result += ADD_ROUNT_MULT
                result = result >> 16
                m1.re = result
                result = a_data.im *MULT_SHIFT
                result -= (cs.re*m_data.im - cs.im*m_data.re)
                result += ADD_ROUNT_MULT
                result = result >> 16
                m1.im = result

                data[m*2] = m1.re
                data[m*2+1] = m1.im

                m2 = SC16()
                result = a_data.re *MULT_SHIFT
                result += cs.re*m_data.re + cs.im*m_data.im
                result += ADD_ROUNT_MULT
                result = result >> 16
                m2.re = result

                result = a_data.im *MULT_SHIFT
                result += cs.re*m_data.im - cs.im*m_data.re
                result += ADD_ROUNT_MULT
                result = result >> 16
                m2.im = result
                
                data[ia*2] = m2.re
                data[ia*2+1] = m2.im
                ia += 1
                
            ia += N2
            j += 1
        ie <<= 1
        N2 >>= 1


def benchmark_main():
    inout_data = DATA[::]
    fft(inout_data)
    for i in range(DATA_LEN):
        assert abs(inout_data[i] - ANSWER[i]) < 3
