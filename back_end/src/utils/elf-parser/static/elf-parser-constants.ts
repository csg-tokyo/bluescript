const ELF_PARSER_CONSTANTS = {
    ELF_CLASS: 1,
    PT_NULL: 0,
    PT_LOAD: 1,
    PT_DYNAMIC: 2,
    PT_INTERP: 3,
    PT_NOTE: 4,
    PT_SHLIB: 5,
    PT_PHDR: 6,
    PT_TLS: 7,
    PT_LOOS: 0x60000000,
    PT_HIOS: 0x6fffffff,
    PT_LOPROC: 0x70000000,
    PT_HIPROC: 0x7fffffff,
    PT_GNU_EH_FRAME: 0x6474e550,
    ET_NONE: 0,
    ET_REL: 1,
    ET_EXEC: 2,
    ET_DYN: 3,
    ET_CORE: 4,
    ET_LOPROC: 0xff00,
    ET_HIPROC: 0xffff,
    DT_NULL: 0,
    DT_NEEDED: 1,
    DT_PLTRELSZ: 2,
    DT_PLTGOT: 3,
    DT_HASH: 4,
    DT_STRTAB: 5,
    DT_SYMTAB: 6,
    DT_RELA: 7,
    DT_RELASZ: 8,
    DT_RELAENT: 9,
    DT_STRSZ: 10,
    DT_SYMENT: 11,
    DT_INIT: 12,
    DT_FINI: 13,
    DT_SONAME: 14,
    DT_RPATH: 15,
    DT_SYMBOLIC: 16,
    DT_REL: 17,
    DT_RELSZ: 18,
    DT_RELENT: 19,
    DT_PLTREL: 20,
    DT_DEBUG: 21,
    DT_TEXTREL: 22,
    DT_JMPREL: 23,
    DT_LOPROC: 0x70000000,
    DT_HIPROC: 0x7fffffff,
    STB_LOCAL: 0,
    STB_GLOBAL: 1,
    STB_WEAK: 2,
    STT_NOTYPE: 0,
    STT_OBJECT: 1,
    STT_FUNC: 2,
    STT_SECTION: 3,
    STT_FILE: 4,
    STT_COMMON: 5,
    STT_TLS: 6,
    EI_NIDENT: 16,
    PF_R: 0x4,
    PF_W: 0x2,
    PF_X: 0x1,
    SHT_NULL: 0,
    SHT_PROGBITS: 1,
    SHT_SYMTAB: 2,
    SHT_STRTAB: 3,
    SHT_RELA: 4,
    SHT_HASH: 5,
    SHT_DYNAMIC: 6,
    SHT_NOTE: 7,
    SHT_NOBITS: 8,
    SHT_REL: 9,
    SHT_SHLIB: 10,
    SHT_DYNSYM: 11,
    SHT_NUM: 12,
    SHT_LOPROC: 0x70000000,
    SHT_HIPROC: 0x7fffffff,
    SHT_LOUSER: 0x80000000,
    SHT_HIUSER: 0xffffffff,
    SHF_WRITE: 0x1,
    SHF_ALLOC: 0x2,
    SHF_EXECINSTR: 0x4,
    SHF_MASKPROC: 0xf0000000,
    SHN_UNDEF: 0,
    SHN_LORESERVE: 0xff00,
    SHN_LOPROC: 0xff00,
    SHN_HIPROC: 0xff1f,
    SHN_ABS: 0xfff1,
    SHN_COMMON: 0xfff2,
    SHN_HIRESERVE: 0xffff,
    R_XTENSA_32: 1,
    R_XTENSA_SLOT0_OP: 20,
    PT_GNU_STACK: 0x60000000 + 0x474e551,
    ELF_ST_BIND: (x:number) => x >> 4,
    ELF_ST_TYPE: (x:number) => x & 0xf,
    ELF32_R_SYM: (x:number) => x >> 8,
    ELF32_R_TYPE: (x:number) => x & 0xff,
    ELF64_R_SYM: (x:number) => x >> 32,
    ELF64_R_TYPE: (x:number) => x & 0xffffffff,
}

export default ELF_PARSER_CONSTANTS